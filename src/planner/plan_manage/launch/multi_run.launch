<launch>
  <!-- size of map, change the size inflate x, y, z according to your application -->
  <arg name="map_size_x" value="40.0"/>
  <arg name="map_size_y" value="40.0"/>
  <arg name="map_size_z" value=" 3.0"/>


  <arg name="ns1" value="drone_1"/>

  <!-- topic of your odometry such as VIO or LIO -->
  <arg name="odom_topic" value="/$(arg ns1)/visual_slam/odom" />

  <!-- Generate map -->
  <node pkg="mockamap" type="mockamap_node" name="mockamap_node" output="screen">  
      <remap from="/mock_map" to="/map_generator/global_cloud"/>

      <param name="seed" type="int" value="127"/>
      <param name="update_freq" type="double" value="0.5"/>

      <!--  box edge length, unit meter-->
      <param name="resolution" type="double" value="0.1"/>

      <!-- map size unit meter-->
      <param name="x_length" value="$(arg map_size_x)"/>
      <param name="y_length" value="$(arg map_size_y)"/>
      <param name="z_length" value="$(arg map_size_z)"/>

      <param name="type" type="int" value="1"/>
      <!-- 1 perlin noise parameters -->
      <!-- complexity:    base noise frequency,
                              large value will be complex
                              typical 0.0 ~ 0.5 -->
      <!-- fill:          infill persentage
                              typical: 0.4 ~ 0.0 -->
      <!-- fractal:       large value will have more detail-->
      <!-- attenuation:   for fractal attenuation
                              typical: 0.0 ~ 0.5 -->

      <param name="complexity"    type="double" value="0.05"/>
      <param name="fill"          type="double" value="0.12"/>
      <param name="fractal"       type="int"    value="1"/>
      <param name="attenuation"   type="double" value="0.1"/>
  </node>

  <!-- main algorithm params -->
  <remap from="/waypoint_generator/waypoints"   to="/$(arg ns1)/waypoint_generator/waypoints"/>
  <remap from="/grid_map/occupancy"             to="/$(arg ns1)/grid_map/occupancy"/>
  <remap from="/grid_map/occupancy_inflate"     to="/$(arg ns1)/grid_map/occupancy_inflate"/>
  <remap from="/grid_map/unknown"               to="/$(arg ns1)/grid_map/unknown"/>
  <remap from="/planning/bspline"               to="/$(arg ns1)/planning/bspline"/>
  <remap from="/planning/data_display"          to="/$(arg ns1)/planning/data_display"/>

  <include ns="$(arg ns1)" file="$(find ego_planner)/launch/advanced_param.xml">

    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>
    <arg name="odometry_topic" value="$(arg odom_topic)"/>

    <!-- camera pose: transform of camera frame in the world frame -->
    <!-- depth topic: depth image, 640x480 by default -->
    <!-- don't set cloud_topic if you already set these ones! -->
    <arg name="camera_pose_topic" value="/$(arg ns1)/pcl_render_node/camera_pose"/>
    <arg name="depth_topic" value="/$(arg ns1)/pcl_render_node/depth"/>

    <!-- topic of point cloud measurement, such as from LIDAR  -->
    <!-- don't set camera pose and depth, if you already set this one! -->
    <arg name="cloud_topic" value="/$(arg ns1)/pcl_render_node/cloud"/>

    <!-- intrinsic params of the depth camera -->
    <arg name="cx" value="321.04638671875"/>
    <arg name="cy" value="243.44969177246094"/>
    <arg name="fx" value="387.229248046875"/>
    <arg name="fy" value="387.229248046875"/>

    <!-- maximum velocity and acceleration the drone will reach -->
    <arg name="max_vel" value="2.0" />
    <arg name="max_acc" value="3.0" />

    <!--always set to 1.5 times grater than sensing horizen-->
    <arg name="planning_horizon" value="7.5" /> 

    <!-- 1: use 2D Nav Goal to select goal  -->
    <!-- 2: use global waypoints below  -->
    <arg name="flight_type" value="1" />
    
    <!-- global waypoints -->
    <!-- It generates a piecewise min-snap traj passing all waypoints -->
    <arg name="point_num" value="5" />

    <arg name="point0_x" value="-15.0" />
    <arg name="point0_y" value="0.0" />
    <arg name="point0_z" value="1.0" />

    <arg name="point1_x" value="0.0" />
    <arg name="point1_y" value="15.0" />
    <arg name="point1_z" value="1.0" />

    <arg name="point2_x" value="15.0" />
    <arg name="point2_y" value="0.0" />
    <arg name="point2_z" value="1.0" />

    <arg name="point3_x" value="0.0" />
    <arg name="point3_y" value="-15.0" />
    <arg name="point3_z" value="1.0" />

    <arg name="point4_x" value="-15.0" />
    <arg name="point4_y" value="0.0" />
    <arg name="point4_z" value="1.0" />
    
  </include>

  <!-- trajectory server -->
  <node ns="$(arg ns1)" pkg="ego_planner" name="traj_server" type="traj_server" output="screen">
    <remap from="/position_cmd" to="planning/pos_cmd"/>

    <remap from="/odom_world" to="$(arg odom_topic)"/>
    <param name="traj_server/time_forward" value="1.0" type="double"/>
  </node>

  <node ns="$(arg ns1)" pkg="waypoint_generator" name="waypoint_generator" type="waypoint_generator" output="screen">
    <remap from="~odom" to="$(arg odom_topic)"/>        
    <remap from="~goal" to="~move_base_simple/goal"/>
    <remap from="~traj_start_trigger" to="~traj_start_trigger" />
    <param name="waypoint_type" value="manual-lonely-waypoint"/>    
  </node>

  <!-- use simulator -->
  <include ns="$(arg ns1)" file="$(find ego_planner)/launch/multi_simulator.xml">
    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>
    <arg name="c_num" value="200"/>
    <arg name="p_num" value="200"/>
    <arg name="min_dist" value="1.2"/>

    <arg name="odom_topic" value="$(arg odom_topic)" />
    <arg name="ns" value="$(arg ns1)"/>
  </include>

</launch>
